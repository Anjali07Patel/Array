brute force
o(n*n)
o(n)

#include<bits/stdc++.h>
using namespace std;
vector<vector<int>>solve(vector<vector<int>>& arr)
{
    int n=arr.size();
    vector<vector<int>>ans(n,vector<int>(n,0));
    for(int i=0;i<arr.size();i++)
    {
        for(int j=0;j<arr[0].size();j++)
        {
            ans[j][n-i-1]=arr[i][j];
        }
    }
    return ans;
}
int main()
{
    vector<vector<int>>arr;
    arr={{1,2,3},{4,5,6},{7,8,9}};
    vector<vector<int>>ans=solve(arr);
    for(int i=0;i<ans.size();i++)
    {
        for(int j=0;j<ans[0].size();j++)
        {
            cout<<ans[i][j]<<" ";
        }
        cout<<endl;
    }
    
}
optimal
tc=o(n/2*n/2)+o(n)
void rotate(vector<vector<int>>& matrix) {
        for(int i=0;i<matrix.size();i++)
        {
            for(int j=0;j<i;j++)
            {
                swap(matrix[i][j],matrix[j][i]);
            }
        }
        for(int i=0;i<matrix.size();i++)
        {
            reverse(matrix[i].begin(),matrix[i].end());
        }
    }
