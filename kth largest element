brute force
(nlogn)
int findKthLargest(vector<int>& nums, int k) {
        int n=nums.size();
        sort(nums.begin(),nums.end());
        return nums[n-k];
    }

better using max heap
o(n) for inserting element in max heap
log n for searching 
o(n)+log n=o(n)
int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int>pq(nums.begin(),nums.end());
        int ans;
        while(k--)
        {
            ans=pq.top();
            pq.pop();
        }
        return ans;
    }

using min heap
o(n)
int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int,vector<int>,greater<int>>pq;
        for(int i=0;i<nums.size();i++)
        {
            pq.push(nums[i]);
            if(pq.size()>k)
            {
                pq.pop();
            }
        }
        return pq.top();
    }
